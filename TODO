FIXME readd contextMenu in connectionHandles
FIXME1 BUG: when adding new nodes/connections or when moving nodes with attached connections VERY fast in the view sometimes
      the program hangs with this error:
  QPainterPath::cubicTo: Adding point where x or y is NaN, results are undefined
  QPainterPath::lineTo: Adding point where x or y is NaN, results are undefined
  QPainterPath::arcTo: Adding arc where a parameter is NaN, results are undefined
  ...
  HINT: this might be the drawing of an connection in the GraphicsScene
  HINT: it is the presumption form above: when two nodes nearly overlap this can happen
      CODE if ( myStartItem->collidesWithItem( myEndItem ) )
      CODE  return;
      when this two lines in SceneItem_Connection are commented we can trigger this issue
FIXME2 bbox issue. when two node items collide, the bbox is out of scope?!
       moving the mouse in the bbox results in the errors from FIXME1

FIXME graphicsitem: bezier issues
  - drawing of loops
  - add arrow head
  - fix connectionItem bbox
  - bezier drawing:
    - current issue: when connectionLabel comes near to start or end node it's screwed
    - bezier is drawn right from the beginning of a node not outside of it's shape
  - bbox issue: after layoutConnections in SceneItem_Node.cpp the bbox is not removed when object
    is drawn somewhere else

FINAL
 - clean all TODOs and FIXMEs in the code
 - usability testing
 - remove debug output
FINAL doxygen comments on code and concepts
 - allg. doku mit doxygen wo die wichtigsten konzepte erklaert
 - some documentation is needed, F1 should open a browser for that

=================================================================================================
        -- not in the scope of this work --
=================================================================================================

2008-06-09 abgabe
  - cdrom mit programmen + doxygen
  - ausarbeitung 2s+doxygen gedruckt, gelocht, geheftet
    ca. 45 seiten, gelocht und verhaftet!

FIXME treeView, adding a new connection isn't marked with a '+' sign in the treeView node line!
      HINT: check the row/column in dataChanged() call, maybe this is the fix?!
      HINT: maybe implement hasChildren as well
      HINT: if layouChanged() is used, it works BUT this is not good since it should work without!
      HINT: it's working for removeRows however AND once '+' was clicked (meaning the item should expand)
            it will be working when the item is removed and after no child is there anymore again an item is added
            it will stop working again when you hit the '-' and try delete all + add one item again
            - the view will update correctly if the widget is clicked anywhere?! why?
      HINT: http://lists.trolltech.com/qt-interest/2007-06/thread00580-0.html
      SOLUTION:
      this is definitly a Qt bug which is either here again by regression or by intention
      http://trolltech.com/developer/task-tracker/index_html?method=entry&id=78949
      i can reproduce it with qt 4.3.3 and qt 4.4.0 -> [2] was taken with qt 4.4.0
      with some help of irc.kde.org#qt from kibab i've made a hack* to make it
      working as intended:

      ================ modified qtreeview.cpp ==================
          if (parent != d->root /*&& !d->isIndexExpanded(parent)*/) {
              QAbstractItemView::rowsInserted(parent, start, end);
      //         return;
      }
      ================ modified qtreeview.cpp ==================

      ================ UNmodified qtreeview.cpp ==================
          if (parent != d->root && !d->isIndexExpanded(parent)) {
              QAbstractItemView::rowsInserted(parent, start, end);
              return;
      }
      ================ UNmodified qtreeview.cpp ==================
      now recompile qt and install it...
      (this fix is not complete and triggers other bugs....)

      the funny thing is that the problem is for insertRows and using qt 4.2.3
      (x==one of the releases) the problem was inverted since insertRows would work
      there but removeRows didn't remove the + sign there.

      [3] seems to cover the same issue

      have fun!

      * i expect some performance penalty and maybe other things as well. please
      check

      [1]
      http://trolltech.com/developer/task-tracker/index_html?method=entry&id=78949
      [2] http://www.lastlog.de/misc/drawing_problem.ogg
      [3] http://lists.trolltech.com/qt-interest/2007-06/thread00580-0.html
FIXME labelEditor could be impoved by selecting all text on edit
FIXME when in labelItemEditor mode one can invoke drawing a red line with MMB on the text (instead of Xserver-paste)
FIXME graphicsView: 'even' amount node_connections should be centered, 'odd' amounts are already rendered as intended
FIXME zoomFit
  - andreas krebs wanted to do that, nearly everything is there now, see
    void mainGraphicsView::zoomFit() { in mainGraphicsView.cpp
FIXME graphicsitem
  - remove trembling when moving an connectionLabel -> FIXED in qt 4.4
FIXME treeView flags should only be editable if editable!
  right now it's just ignoring edits which don't affect anything
FIXME add symbol editor featuring a QStringList model
FIXME label needs caching inside a node/connection since each redraw triggers a model query
FIXME if connectionLabel is moved between two nodes it's resizing on node move is correct
    BUT if the connectionLabel is moved beyond on node it's resizing is done into the wrong direction
    -> while the distance between the nodes shrinks the object moves even farer away
FIXME moving two nodes in a way they will overlap should be handled better: connection drawing is disabled then!
  - also fix object initialisation of a connection
    because two overlapping connectionLabels should be drawn RED!
FIXME use parentWidget() and parent where possible
FIXME nodes should appear under mouse cursor not randomly if added from the GraphicsView
      fix it here: QGraphicsItem* GraphicsScene::nodeInserted( QPersistentModelIndex item ) {
FIXME ICONS for ACTIONS:
  - enable/disable opengl rendering
FIXME GraphicsScene: replace keyPressEvent code with QShortCut/QAction

graphicsView:
 - grid
  - show/hide grid
  - enable/disable grid magnification
  - inc/dec grid spacing
 - implement 'flow' -> this feature will move overlapping nodes away from each and
                       it does so for connection labels as well
 - add rotation handle

  misc:
  add this to the documentaiton for futher reading
 - http://www.graphviz.org/doc/libguide/libguide.pdf
 - http://www.boost.org/doc/libs/1_35_0/libs/graph/doc/index.html
 - http://www.graphviz.org/
 - http://www.boost.org/libs/graph/doc/fruchterman_reingold.html

todo
      LMB                     -> select node/connection
      LMB drag                -> bbox for selecting objects
      MMB on nodes            -> connect them
x     MMB on empty space      -> move view
      RMB on node/connection  -> context menu
      RMB on scene            -> ??????????????

general:
 - add 'invert all connections' to automate_algorithms
 - re-merge automate_algorithms to trunk
 - getAutomateType
   create a better detection of automate type
 - checkWord
   iterative word check implementation for eNFA/NFA/DFA
 - think about if automate/meta_automate need a
   copy constructor ... -> rule of three
   - copy an automate 1:1

FIXME
items which have to be editable:
                            treeView    graphicsview
 - start                    editable    editable
 - final                    editable    editable
 - next_node                editable    visible,no editor yet
 - new connections          editable    editable
 - new nodes                editable    - (fixme, nearly works)
 - deletable nodes          editable    editable
 - deletable conns.         editable    editable
 - multiple selection       editable    editable
 - node label rename        editable    -
 - connection label ren     editable    -
 - connection symbol        editable    -
 - move nodes/labels        sorting     mouse drag
 - ctrl+LMB add single      -           editable
   node to a selection
 - ctrl+LMB add single      -           editable
   conn. to a selection     -           -
 - select a single node
   \ by boundingbox         -           editable
   \ by click               editable    editable
 - select a single conn.
   \ by boundingbox         -           editable
   \ by click               editable    -
 - reconnect on the fly     editable    -
  (in the graphicsView we need a handle for this)
